// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bbb-name: 'bbb';
$bbb-x: 173px;
$bbb-y: 0px;
$bbb-offset-x: -173px;
$bbb-offset-y: 0px;
$bbb-width: 72px;
$bbb-height: 32px;
$bbb-total-width: 325px;
$bbb-total-height: 46px;
$bbb-image: '../sprites/header-icons.png';
$bbb: (173px, 0px, -173px, 0px, 72px, 32px, 325px, 46px, '../sprites/header-icons.png', 'bbb', );
$boa-name: 'boa';
$boa-x: 64px;
$boa-y: 0px;
$boa-offset-x: -64px;
$boa-offset-y: 0px;
$boa-width: 46px;
$boa-height: 46px;
$boa-total-width: 325px;
$boa-total-height: 46px;
$boa-image: '../sprites/header-icons.png';
$boa: (64px, 0px, -64px, 0px, 46px, 46px, 325px, 46px, '../sprites/header-icons.png', 'boa', );
$bravo-name: 'bravo';
$bravo-x: 27px;
$bravo-y: 0px;
$bravo-offset-x: -27px;
$bravo-offset-y: 0px;
$bravo-width: 37px;
$bravo-height: 33px;
$bravo-total-width: 325px;
$bravo-total-height: 46px;
$bravo-image: '../sprites/header-icons.png';
$bravo: (27px, 0px, -27px, 0px, 37px, 33px, 325px, 46px, '../sprites/header-icons.png', 'bravo', );
$norton-name: 'norton';
$norton-x: 110px;
$norton-y: 0px;
$norton-offset-x: -110px;
$norton-offset-y: 0px;
$norton-width: 63px;
$norton-height: 34px;
$norton-total-width: 325px;
$norton-total-height: 46px;
$norton-image: '../sprites/header-icons.png';
$norton: (110px, 0px, -110px, 0px, 63px, 34px, 325px, 46px, '../sprites/header-icons.png', 'norton', );
$pba-name: 'pba';
$pba-x: 0px;
$pba-y: 0px;
$pba-offset-x: 0px;
$pba-offset-y: 0px;
$pba-width: 27px;
$pba-height: 33px;
$pba-total-width: 325px;
$pba-total-height: 46px;
$pba-image: '../sprites/header-icons.png';
$pba: (0px, 0px, 0px, 0px, 27px, 33px, 325px, 46px, '../sprites/header-icons.png', 'pba', );
$ss-name: 'ss';
$ss-x: 245px;
$ss-y: 0px;
$ss-offset-x: -245px;
$ss-offset-y: 0px;
$ss-width: 80px;
$ss-height: 40px;
$ss-total-width: 325px;
$ss-total-height: 46px;
$ss-image: '../sprites/header-icons.png';
$ss: (245px, 0px, -245px, 0px, 80px, 40px, 325px, 46px, '../sprites/header-icons.png', 'ss', );
$spritesheet-width: 325px;
$spritesheet-height: 46px;
$spritesheet-image: '../sprites/header-icons.png';
$spritesheet-sprites: ($bbb, $boa, $bravo, $norton, $pba, $ss, );
$spritesheet: (325px, 46px, '../sprites/header-icons.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
